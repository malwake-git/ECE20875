So our total throughput equation again is S N comma p equals N p times 1 - p to the N - 1 power. This is the total throughput across all stations. If we want to find the per-station throughput we could divide this by N for each individual station, it would be p times 1 - p to the N minus 1. So, we can readily solve for the value of p that will maximize the total throughput for a given value of N. So we want to find what transmission probability we should be setting devices to to maximize the throughput given that we have N stations.

To do this we need to evaluate the derivative of S with respect to p and set it to 0. So if you recall the product rule of differentiation from calculus, it says if we have some function f of p and we can write that function as the product of two functions of p like f of p equals g of p times h of p that we can then find the derivative as follows: f prime of p equals g of p h prime of p plus the derivative of g times h. This is very useful here because in this throughput equation we have p appearing multiple times as a product of one another, and so this is the product rule of differentiation helps us.

So if we set g of p equal to p and h of p equal to N times 1 - p to the N - 1, we can evaluate dS dp, the change in S with respect to p, as N times 1 - p to the N - 1 plus N times N - 1 times 1 - p to the N - 2 and since in this case we're taking the derivative of 1 - p to the N - 1 we have to also take the derivative of what's inside 1 - p, and that's going to give us negative 1. So, we multiply this original p by negative 1 to give us minus p. So therefore, this is going to be equal to 1 - p to the N - 2 power I'm going to take out N - 2 1 - p's, here we have N - 1 on this side we have N - 2, and then I'm left in the inside with N times 1 - p - N times N - 1 p. So if you distribute this 1 - p to the N - 2 times N times 1 - p you're going to get N times 1 - p to the N - 1, and then on the right side if you do that out, you're going to get the original product back.

Therefore, the derivative of S with respect to p, just to simply this out a bit, is the following. We have dS dp equals 1 - p to the N - 2 times N times 1 - Np. So now, what we're interested in is how can this equation here, this equation for the derivative of S with respect to p, when is that going to be equal to 0. But before we do that, we can also consider a bit more about what we were talking about earlier, with the case of N equals 10 and p is equal to 0.3. Remember we found before that we were getting about 12 percent throughput with this setting of p given N. So what is the derivative of S with respect to p given these choices? We have dS dp is equal to 1 - 0.3 to the N - 2 in this case 10 - 2 is 8 times N which is 10 times 1 - 10 times 0.3 and that's going to give us actually negative 1.1530. So the derivative there is not zero, and in fact, it's negative, so the throughput is actually decreasing at this point in p as p gets larger. So around 0.3 when we're around this value 0.3 the throughput is actually decreasing as we increase p. So we would therefore want to try to lower p from its current value to see if we can drive up the current throughput, so p equals 0.3 is actually a value that is too large for N equals 10.

The question is what should it be lowered to? If we were to drop it down, do we want to bring it to 0.2? Do we want to bring it to 0.1? 0.05? What is the right value to maximize the throughput? So in order for this derivative equation to be 0, we can have one of two things be true. This N term isn't helping us out but if we look at 1 - p to the N - 2 the first condition then is that 1 - p is equal to 0, that would certainly set this derivative to zero because then this term would be zero. The second point is that we have 1 - N times p equal to 0. So we can have either one of these things be true for our derivative to be zero.

Now the question is which one is more useful. Well this first condition here implies that p is equal to 1. That would mean that everyone transmits constantly, which would also cause collisions in every step, and therefore that would actually drive the total throughput back down to 0. And you can see that from the original throughput equation, 1 - p is a product term here, so 1 - 1 is just 0 therefore the total throughput for p equals 1 is just 0. So this condition here isn't particularly useful for us, it's not what we're going to want to do.

The second condition means that p star equals 1 over N. And that's the optimal choice of p that we're looking for. As the number of stations increases, the optimal transmission probability will decrease proportionally, which should make sense because every person is going to get a smaller piece of the total pie as we have more people involved. On the other hand, when there's less stations, each of them should have more time to use the channel. So if we go back to our case of 10 stations, when we have 10 stations the optimal transmission probability is actually .1, or 10 percent, and that's lower than the 30 percent we used earlier.

So again, our optimal choice of p is p star equals 1 over N, very simple formula. And if we have our original throughput equation S N p equals N p times 1 - p to the N - 1 we can find the maximum total throughput as a function of N, so if we're going to keep changing the transmission probability as N changes, we can come up with an equation call it S star of N to be the optimal throughput with N stations. That's just going to be S with N stations and with p equal to 1 over N in particular. If we put 1 over N in here for p, we're going to get N times 1 over N which is just going to be 1, so that's going to be 1 minus 1 over N to the N - 1 power. So again, with 10 stations, S star of 10 is going to be 1 minus 1 over 10 or 0.9 raised to the 9th power which is 0.3874 or 38.7 percent. So that's better than the 12.1 percent we got when we had 30 percent for p, but it's still not particularly high, and remember also that this is total throughput, each of the 10 stations is only getting one tenth of this, so the per-station throughput is actually about 3 percent. per-station is about 3 percent. So that means that to put that into perspective, if the wireless interface could support say 100 megabits per second, each of the ten stations is just going to be seeing about 3 percent, or technically about 3.9 percent, which is very small. And that is also not accounting for other factors we talked about like overhead and distance from the access point which can in turn have a huge effect. Therefore it should be no wonder that when you have 10 people around you are seeing very small WiFi throughputs from your individual device.

So we can verify the formulas for optimal transmission probability and maximum throughput by plotting S N p as we change p and for different values of N. N equals 1, N equals 2, 3, 5, 10, and so-forth. So we can see that for a fixed value of N, S N p is actually concave in p. So if we take say the case for 10, it starts to rise and then it reaches a point and then it starts to fall. That's a concave function. It reaches its maximum for some p star between 0 and 1, p stars are found here, and wherever the plots reach their maximums, another p star, and so forth. And for N equals 1, p star it should intuitively make sense is 1, because if we just have one station we want it to be transmitting all the time to get its maximum throughput because it's never going to have any collisions.

Also as N increases the maximum throughput is going to decrease, we can see here that this maximum value that we're obtaining is dropping as N increases on the envelope here. And that illustrates the poor performance of ALOHA. With more stations the total throughput drops. With more stations we would expect the per-station throughput to drop, again because everyone has a smaller chunk of the pie, but actually the total throughput that everyone is achieving using the channel is going to drop. As N increases, the total throughput is dropping in addition to the maximum transmission probability dropping.

So if we try to see what is going to happen as N goes to infinity to this total throughput, we can use the limit identity the limit as x approaches infinity of 1 - 1 over x to the x this is something we also learned in calculus and this is actually equal to 1 over e where e is 2.7 it's the value of e that corresponds to the natural log. So as the number of stations increases, the maximum total throughput will decay to 1 over e is about 0.37. So that means that at a very large number of stations we're going to be getting about 37 percent at best with a very large number of stations. And the per-station throughput, this is the total throughput, obviously the per-station throughput is going to go to 0 because we have an additional factor of N we are dividing by in the denominator. And it's also going to be going to 0 very quickly.

So clearly, 37 percent is not a big number. But this is intuitive since this simple slotted Aloha method described has no coordination between the different stations. Compared with other protocols Aloha takes the least amount of communication and coordination and does not even use carrier sensing which is the reason why it has such low throughput. So as we'll see carrier sensing multiple access the CSMA protocol as opposed to the Aloha protocol fixes this problem to some extent by adding in implicit coordination between the transmitters, but again even though CSMA is widely in use today we're going to see that CSMA is also not scalable in the end.